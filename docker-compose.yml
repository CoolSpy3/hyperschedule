version: "3.8"
services:
    base:
        image: hyperschedule-dev-base
        build:
            context: .
            dockerfile: dev.dockerfile
        volumes:
            - node_modules:/srv/hyperschedule/node_modules
            - ./yarn.lock:/srv/hyperschedule/yarn.lock:ro
            - ./package.json:/srv/hyperschedule/package.json:ro
            - ./frontend/package.json:/srv/hyperschedule/frontend/package.json:ro
            - ./backend/package.json:/srv/hyperschedule/backend/package.json:ro
            - ./shared/package.json:/srv/hyperschedule/shared/package.json:ro
        command: yarn install --immutable

    db:
        image: mongo
        networks:
            - backend
        expose:
            - 27017
        environment:
            MONGO_INITDB_ROOT_USERNAME: hyperschedule
            MONGO_INITDB_ROOT_PASSWORD:
                local_dev

    backend:
        image: hyperschedule-dev-base
        depends_on:
            base:
                condition:
                    service_completed_successfully
        ports:
            - 8080:8080
        networks:
            - backend
        volumes:
            - node_modules:/srv/hyperschedule/node_modules
            - ./backend:/srv/hyperschedule/backend:ro
            - ./shared:/srv/hyperschedule/shared:ro
            - ./data:/srv/hyperschedule/data:ro

        working_dir: /srv/hyperschedule/backend
        command: yarn serve
        environment:
            DB_URL: mongodb://hyperschedule:local_dev@db

    frontend:
        image: hyperschedule-dev-base
        depends_on:
            base:
                condition: service_completed_successfully
        ports:
            - 5000:5000
        volumes:
            # this is not read-only because vite really wants to write some files
            - node_modules:/srv/hyperschedule/node_modules
            - ./frontend:/srv/hyperschedule/frontend
            - ./shared:/srv/hyperschedule/shared:ro
            - ./data:/srv/hyperschedule/data:ro
        working_dir: /srv/hyperschedule/frontend
        command: yarn serve

    nginx:
        image: nginx:1.24.0
        depends_on:
            backend:
                condition: service_started
        ports:
            - 80:80
            - 443:443
        networks:
            - backend
        volumes:
            - ./data/nginx/cert/:/etc/nginx/cert/:ro
            - ./data/nginx/compose.conf:/etc/nginx/conf.d/default.conf:ro

networks:
    backend:

volumes:
    node_modules:
